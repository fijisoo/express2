{"dependencies":[{"name":"C:\\Users\\BRITENET\\WebstormProjects\\untitled\\package.json","includedInParent":true,"mtime":1521644615725},{"name":"C:\\Users\\BRITENET\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\package.json","includedInParent":true,"mtime":1521625482644},{"name":"create-hash","loc":{"line":1,"column":25}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar createHash = require('create-hash');\nmodule.exports = function (seed, len) {\n  var t = new Buffer('');\n  var  i = 0, c;\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = new Buffer(4);\n  out.writeUInt32BE(c,0);\n  return out;\n}","map":{"mappings":[{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}}],"sources":{"..\\..\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\public-encrypt\\mgf.js":"var createHash = require('create-hash');\nmodule.exports = function (seed, len) {\n  var t = new Buffer('');\n  var  i = 0, c;\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = new Buffer(4);\n  out.writeUInt32BE(c,0);\n  return out;\n}"},"lineCount":17}},"hash":"242a41a6e4d73a320597d938679e2ed3","cacheData":{"env":{}}}