{"dependencies":[{"name":"C:\\Users\\BRITENET\\WebstormProjects\\untitled\\package.json","includedInParent":true,"mtime":1521644615725}],"generated":{"js":"// var sass = require('node-sass');\n// sass.render({\n//     file: '/path/to/myFile.scss',\n//     data: 'body{background:blue; a{color:black;}}',\n//     importer: function(url, prev, done) {\n//         // url is the path in import as is, which LibSass encountered.\n//         // prev is the previously resolved path.\n//         // done is an optional callback, either consume it or return value synchronously.\n//         // this.options contains this options hash, this.callback contains the node-style callback\n//         someAsyncFunction(url, prev, function(result){\n//             done({\n//                 file: result.path, // only one of them is required, see section Special Behaviours.\n//                 contents: result.data\n//             });\n//         });\n//         // OR\n//         var result = someSyncFunction(url, prev);\n//         return {file: result.path, contents: result.data};\n//     },\n//     includePaths: [ 'lib/', 'mod/' ],\n//     outputStyle: 'compressed'\n// }, function(error, result) { // node-style callback from v3.0.0 onwards\n//     if (error) {\n//         console.log(error.status); // used to be \"code\" in v2x and below\n//         console.log(error.column);\n//         console.log(error.message);\n//         console.log(error.line);\n//     }\n//     else {\n//         console.log(result.css.toString());\n//\n//         console.log(result.stats);\n//\n//         console.log(result.map.toString());\n//         // or better\n//         console.log(JSON.stringify(result.map)); // note, JSON.stringify accepts Buffer too\n//     }\n// });\n// // OR\n// var result = sass.renderSync({\n//     file: '/path/to/file.scss',\n//     data: 'body{background:blue; a{color:black;}}',\n//     outputStyle: 'compressed',\n//     outFile: '/to/my/output.css',\n//     sourceMap: true, // or an absolute or relative (to outFile) path\n//     importer: function(url, prev, done) {\n//         // url is the path in import as is, which LibSass encountered.\n//         // prev is the previously resolved path.\n//         // done is an optional callback, either consume it or return value synchronously.\n//         // this.options contains this options hash\n//         someAsyncFunction(url, prev, function(result){\n//             done({\n//                 file: result.path, // only one of them is required, see section Special Behaviours.\n//                 contents: result.data\n//             });\n//         });\n//         // OR\n//         var result = someSyncFunction(url, prev);\n//         return {file: result.path, contents: result.data};\n//     }\n// }));\n//\n// console.log(result.css);\n// console.log(result.map);\n// console.log(result.stats);","map":{"mappings":[{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"index.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"index.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"index.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"index.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"index.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"index.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"index.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"index.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"index.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"index.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"index.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"index.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"index.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"index.ts","name":null,"original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"index.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"index.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"index.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"index.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"index.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"index.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"index.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"index.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"index.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"index.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"index.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"index.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"index.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"index.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"index.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"index.ts","name":null,"original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"index.ts","name":null,"original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"index.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"index.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"index.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"index.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"index.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"index.ts","name":null,"original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"index.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"index.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"index.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"index.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"index.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"index.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"index.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"index.ts","name":null,"original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"index.ts","name":null,"original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"index.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"index.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"index.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"index.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"index.ts","name":null,"original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"index.ts","name":null,"original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"index.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"index.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"index.ts","name":null,"original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"index.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"index.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"index.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"index.ts","name":null,"original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"index.ts","name":null,"original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"index.ts","name":null,"original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"index.ts","name":null,"original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"index.ts","name":null,"original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"index.ts","name":null,"original":{"line":65,"column":0},"generated":{"line":65,"column":0}}],"sources":{"index.ts":"// var sass = require('node-sass');\r\n// sass.render({\r\n//     file: '/path/to/myFile.scss',\r\n//     data: 'body{background:blue; a{color:black;}}',\r\n//     importer: function(url, prev, done) {\r\n//         // url is the path in import as is, which LibSass encountered.\r\n//         // prev is the previously resolved path.\r\n//         // done is an optional callback, either consume it or return value synchronously.\r\n//         // this.options contains this options hash, this.callback contains the node-style callback\r\n//         someAsyncFunction(url, prev, function(result){\r\n//             done({\r\n//                 file: result.path, // only one of them is required, see section Special Behaviours.\r\n//                 contents: result.data\r\n//             });\r\n//         });\r\n//         // OR\r\n//         var result = someSyncFunction(url, prev);\r\n//         return {file: result.path, contents: result.data};\r\n//     },\r\n//     includePaths: [ 'lib/', 'mod/' ],\r\n//     outputStyle: 'compressed'\r\n// }, function(error, result) { // node-style callback from v3.0.0 onwards\r\n//     if (error) {\r\n//         console.log(error.status); // used to be \"code\" in v2x and below\r\n//         console.log(error.column);\r\n//         console.log(error.message);\r\n//         console.log(error.line);\r\n//     }\r\n//     else {\r\n//         console.log(result.css.toString());\r\n//\r\n//         console.log(result.stats);\r\n//\r\n//         console.log(result.map.toString());\r\n//         // or better\r\n//         console.log(JSON.stringify(result.map)); // note, JSON.stringify accepts Buffer too\r\n//     }\r\n// });\r\n// // OR\r\n// var result = sass.renderSync({\r\n//     file: '/path/to/file.scss',\r\n//     data: 'body{background:blue; a{color:black;}}',\r\n//     outputStyle: 'compressed',\r\n//     outFile: '/to/my/output.css',\r\n//     sourceMap: true, // or an absolute or relative (to outFile) path\r\n//     importer: function(url, prev, done) {\r\n//         // url is the path in import as is, which LibSass encountered.\r\n//         // prev is the previously resolved path.\r\n//         // done is an optional callback, either consume it or return value synchronously.\r\n//         // this.options contains this options hash\r\n//         someAsyncFunction(url, prev, function(result){\r\n//             done({\r\n//                 file: result.path, // only one of them is required, see section Special Behaviours.\r\n//                 contents: result.data\r\n//             });\r\n//         });\r\n//         // OR\r\n//         var result = someSyncFunction(url, prev);\r\n//         return {file: result.path, contents: result.data};\r\n//     }\r\n// }));\r\n//\r\n// console.log(result.css);\r\n// console.log(result.map);\r\n// console.log(result.stats);"},"lineCount":null}},"hash":"70be5aa8d05afcbc465948a2594ba6fb","cacheData":{"env":{}}}